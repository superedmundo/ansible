---
- name: Duplicate a user in Active Directory
  hosts: 10.100.1.116
  gather_facts: no 
  vars_files:
  - "./oscarc_otobo_password"
  collections:
    - ditra.cisco
    - ansible.builtin.password

  vars:
    sAMAccountName_source: null
    sAMAccountName: null
    
    enabled: true
    departmentNumber: null
    dominio: contoso.mx
    employeeID: null
    employeeNumber: null
    employeeType: null
    givenName: null
    homePhone: null
    initials: null
    sn: null

    generated_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits', 'punctuation'], length=12) }}"

    # NOTIFICACIONES
    # Sms 
    # On Success
    notification_sms: null
    notification_sms_send_user_credentials: null

    # Email
    # On Success
    notification_email: null
    notification_email_send_user_credentials: null

    # Variables internas de control de flujo
    something_wrong: false
    mensaje_error: null

    # vars for otobo changes
    validate_certs: false
    otobo_user: baltadlakd
    base_url: https://10.100.1.124/otobo/nph-genericinterface.pl/Webservice
    module:
      login: /care
      cmdb: /CMDB/ConfigItem
    path:
      login: "{{ base_url }}{{ module.login }}/login"
      Ticket: "{{ base_url }}{{ module.login }}/Ticket"
    TicketID: null

  tasks:

  # tasks to update status in oboto
    - name: Otobo login, get session id
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ path.login }}"
        method: POST
        body_format: json
        body:
          UserLogin: "{{ otobo_user }}"
          Password: "{{ otobo_password }}"
        validate_certs: "{{ validate_certs }}"
        return_content: true
      register: response

    - name: Get SessionID from login response
      ansible.builtin.set_fact:
        session_id: "{{ r.SessionID }}"
      vars:
        r: "{{ response.content | from_json }}"
      delegate_to: localhost
    
    - name: Set auto process ticket as processing status
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ path.Ticket }}/{{ TicketID }}/Update"
        method: POST
        body_format: json
        body:
          SessionID: "{{ session_id }}"
          TicketID: "{{ TicketID }}"
          DynamicField:
           - Name: AutoStatus
             Value: processing

        validate_certs: "{{ validate_certs }}"
        return_content: true
      register: response
      failed_when: "response.status != 200"
      run_once: true
      when: TicketID is not none and session_id is defined

    - name: Desplegando las variables que llegaron.
      ansible.builtin.debug:
        msg: 
          sAMAccountName_source: "{{ sAMAccountName_source }}" 
          sAMAccountName:        "{{ sAMAccountName }}" 
          generated_password:    "{{ generated_password }}"
          givenName:             "{{ givenName }}"
          sn:                    "{{ sn }}"

          # NOTIFICACIONES
          # Email
          # On Success
          notification_email: "{{ notification_email }}"
          notification_email_send_user_credentials: "{{ notification_email_send_user_credentials }}"

  # Revisando si ya existe o no el ususario en el AD

    - name: Queryng "{{ sAMAccountName_source }}" 
      block:
        - name: Queryng "{{ sAMAccountName_source }}" 
          when: sAMAccountName_source is defined
          community.windows.win_domain_user:
            name: "{{ sAMAccountName_source }}"
            state: query
          register: result_query 

        - name: Establecer el valor de result_query como result
          ansible.builtin.set_fact:
            result: "{{ result_query }}"   

        - name: Desplegando result_query
          ansible.builtin.debug:
            var: result_query

        - name: Queryng "{{ sAMAccountName }}" 
          when: sAMAccountName is defined
          community.windows.win_domain_user:
            name: "{{ sAMAccountName }}"
            state: query
          register: result_query 

      rescue: 
        - name: Envio de correo failed
          when: notification_email is defined
          ansible.builtin.include_role:
            name: ditra.cisco.send_email
            apply:
              delegate_to: localhost
          vars:
            subject: Ocurrió un error en la búsqueda de la cuenta en AD
            body: |
              ansible_failed_task: "{{ ansible_failed_task | to_json(indent=2) }}"
              ansible_failed_result: "{{ ansible_failed_result | to_json(indent=2) }}" 

            to_email: "{{ notification_email }}"
            alert: true         

        - name: Establecer el valor de algo Erroneo
          ansible.builtin.set_fact:
            something_wrong: true

  # Asegurandonos que el usuario source ya exista y que no exista la cuenta destino
    - name: Asegurando que NO exista ya el usuario
      when: result.state == "absent" or result_query.state == "present"
      block:
        - name: Establecer el valor de algo Erroneo
          ansible.builtin.set_fact:
            something_wrong: true
            mensaje_error: "La cuenta fuente no existe y/o la cuenta destino ya existe."

  # Consultando todas las propiedades.
    - name: Gather all properties
      ansible.windows.win_powershell:
        script: |
          Get-ADUser -Identity "{{ sAMAccountName_source }}" -Properties * | ConvertTo-JSON
      register: properties

    - name: Set JSON object
      ansible.builtin.set_fact:
        json_properties: "{{ properties.output[0] }}"

    - name: desplegando json_properties
      ansible.builtin.debug:
        var: json_properties

  # Agregando al usuario por que no existe
    - name: Add User because is absent
      when: something_wrong == false
      block:
        - name: add user in ad
          microsoft.ad.user:
            name: "{{ sAMAccountName }}"
            password: "{{ generated_password }}"
            #enabled: "{{ result.enabled }}"
            state: present
            # groups:
            #   set:  
            #     - Domain users
            #delegates: 
            #  set:  "{{ result.delegates }}"
            attributes:
              set:
                # #account_locked: "{{ result.account_locked }}"
                # c: "{{ (json_properties.Country is defined ) | ternary(json_properties.Country,' ', '') }}"
                # #codePage: "{{ codePage }}"
                # comment: "{{ (json_properties.comment is defined ) | ternary(json_properties.comment,' ', '') }}"
                # company: "{{ (json_properties.Company is defined ) | ternary(json_properties.Company,' ',' ') }}" 
                # #delegates: "{{ result.delegates }}"
                # department: "{{ (json_properties.Department is defined ) | ternary(json_properties.Department,' ',' ') }}"
                # #departmentNumber: "{{ result.departmentNumber }}"
                # description: "{{ (json_properties.Description is defined ) | ternary(json_properties.Description,' ',' ') }}"
                # #displayName: "{{ givenName }} {{ sn }}"

                # division: "{{ (json_properties.Division is defined ) | ternary(json_properties.Division,' ',' ') }}"
                # #employeeID: "{{ result.employeeID }}"
                # #employeeNumber: "{{ result.employeeNumber }}"
                # #employeeType: "{{ result.employeeType }}"
                # facsimileTelephoneNumber: "{{ (json_properties.facsimileTelephoneNumber is defined ) | ternary(json_properties.facsimileTelephoneNumber,' ',' ') }}"
                
                # #givenName: "{{ (givenName is defined ) | ternary(givenName,' Nombre de pila ') }}"
                # #mail: "{{ result.email }}"
                
                # #middleName: "{{ result.middleName }}"
                # #mobile: "{{ result.mobile }}"
                # #pager: "{{ result.pager }}"
                # personalTitle: "{{ (json_properties.personalTitle is defined ) | ternary(json_properties.personalTitle,' ',' ') }}"
                # physicalDeliveryOfficeName: "{{ (json_properties.personalTitle is defined ) | ternary(json_properties.personalTitle,' ',' ') }}"
                # #postalAddress: "{{ (result.postalAddress is defined ) | ternary(result.postalAddress,' ') }}"
                # postalCode: "{{ (json_properties.PostalCode is defined ) | ternary(json_properties.PostalCode,' ',' ') }}"
                # #postOfficeBox: "{{ (result.postOfficeBox is defined ) | ternary(result.postOfficeBox,' ') }}"
                # sn: "{{ (json_properties.sn is defined ) | ternary(json_properties.sn,' ',' ') }}"
                # st: "{{ (json_properties.State is defined ) | ternary(json_properties.State,' ',' ') }}"
                # street: "{{ (json_properties.street is defined ) | ternary(json_properties.street,' ',' ') }}"
                # streetAddress: "{{ (json_properties.StreetAddress is defined ) | ternary(json_properties.StreetAddress,' ',' ') }}"
                # telephoneNumber: "{{ (json_properties.telephoneNumber is defined ) | ternary(json_properties.telephoneNumber,' ',' ') }}"
                # title: "{{ (json_properties.Title is defined ) | ternary(json_properties.Title,' ',' ') }}"
                userPrincipalName: "{{ sAMAccountName }}@{{ dominio }}"
                #wWWHomePage: "{{ (json_properties.wWWHomePage is defined ) | ternary(json_properties.wWWHomePage,' ',' ') }}"
          register: result_add_user


        - name: Desplegando el resultado del Add.
          ansible.builtin.debug:
            var:  result_add_user

        - name: Queryng Again "{{ sAMAccountName }}" 
          when: sAMAccountName is defined
          community.windows.win_domain_user:
            name: "{{ sAMAccountName }}"
            state: query
          register: result_query 

        - name: Establecer el valor de result_query como result
          ansible.builtin.set_fact:
            result: "{{ result_query }}"   
      
      rescue: 
        - name: Envio de correo failed al no poder crear el usuario
          when: notification_email is defined and something_wrong == true
          ansible.builtin.include_role:
            name: ditra.cisco.send_email
            apply:
              delegate_to: localhost
          vars:
            subject: Ocurrió un error en la alta de la cuenta de AD
            body: |
              result_add_user: "{{ result_add_user | to_json(indent=2) }}" 

              ***********
              ansible_failed_task: "{{ ansible_failed_task | to_json(indent=2) }}" 

              ***********
              ansible_failed_result: "{{ ansible_failed_result | to_json(indent=2) }}" 

            to_email: "{{ notification_email }}"
            alert: true

        - name: Desplegando la variable de ansible_facts.
          ansible.builtin.debug:
            msg: 
              ansible_facts: "{{ ansible_facts | to_json(indent=2) }}"          

        - name: Establecer el valor de algo Erroneo
          ansible.builtin.set_fact:
            something_wrong: true          

  # Modificando al usuario por que ya existe

    - name: Modify User because is present
      when: result.state == "present" and something_wrong == false
      block:
        - name: Entrando al bloque de Modificación
          ansible.builtin.debug:
            msg: 
              result.state: "{{ result.state }}" 
              
        - name: Modify enabled user in AD
          when: enabled is defined and result.enabled != enabled
          microsoft.ad.user:
            enabled: "{{ enabled }}"
            name: "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present

        - name: Modify user_cannot_change_password user in AD
          when: user_cannot_change_password is defined and result.user_cannot_change_password != user_cannot_change_password
          microsoft.ad.user:
            user_cannot_change_password: "{{ user_cannot_change_password }}"
            name: "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:  present

        - name: Modify password user in AD
          when: generated_password is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            password: "{{ generated_password }}"
        
        - name: Modify groups_to_add user in AD
          when: json_properties.MemberOf is defined
          microsoft.ad.user:
            name: "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:  present
            groups:
              set:  "{{ json_properties.MemberOf }}" 

        - name: modify c user in ad
          when:
            - json_properties.Country is defined
            - json_properties.Country != none  
            - json_properties.Country | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                c: "{{ json_properties.Country }}"

        - name: modify codepage user in ad
          when: codePage is defined
            - json_properties.codePage is defined
            - json_properties.codePage != none  
            - json_properties.codePage | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                codepage: "{{ json_properties.codePage }}"

        - name: Modify comment user in AD
          when: 
            - json_properties.comment is defined
            - json_properties.comment != none  
            - json_properties.comment | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                comment: "{{ json_properties.comment }}"

        - name: modify Company user in ad
          when:
            - json_properties.Company is defined
            - json_properties.Company != none  
            - json_properties.Company | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                company: "{{ json_properties.Company }}"

        - name: modify delegates user in ad
          when:
            - json_properties.Manager is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                delegates: "{{ json_properties.Manager }}"

        - name: modify department user in ad
          when:
            - json_properties.Department is defined
            - json_properties.Department != none  
            - json_properties.Department | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                department: "{{ json_properties.Department }}"

        - name: Modify departmentNumber user in AD
          when: departmentNumber is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                departmentNumber: "{{ departmentNumber }}"

        - name: Modify description user in AD
          when:
            - json_properties.Description is defined
            - json_properties.Description != none  
            - json_properties.Description | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                description: "{{ json_properties.Description }}"

        - name: Modify displayName user in AD
          when: 
            - givenName is defined
            - givenName != none  
            - givenName | length != 0
            - sn is defined
            - sn != none  
            - sn | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                displayName: "{{ givenName }} {{ sn }}"

        - name: Modify division user in AD
          when: 
            - json_properties.Division is defined
            - json_properties.Division != none  
            - json_properties.Division | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                division: "{{ json_properties.Division }}"

        - name: Modify employeeID user in AD
          when: employeeID is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                employeeID: "{{ employeeID }}"

        - name: Modify employeeNumber user in AD
          when: employeeNumber is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                employeeNumber: "{{ employeeNumber }}"

        - name: Modify employeeType user in AD
          when: employeeType is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                employeeType: "{{ employeeType }}"

        - name: Modify facsimileTelephoneNumber user in AD
          when: 
            - json_properties.facsimileTelephoneNumber is defined
            - json_properties.facsimileTelephoneNumber != none  
            - json_properties.facsimileTelephoneNumber | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                facsimileTelephoneNumber: "{{ json_properties.facsimileTelephoneNumber }}"

        - name: Modify givenName user in AD
          when: givenName is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                givenName: "{{ givenName }}"

        - name: Modify homePhone user in AD
          when:
            - homePhone is defined
            - homePhone != none  
            - homePhone | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                homePhone: "{{ homePhone }}"

        - name: modify info user in ad
          when:
            - json_properties.info is defined
            - json_properties.info != none  
            - json_properties.info | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                info: "{{ json_properties.info }}"

        - name: Modify initials user in AD
          when:
            - initials is defined
            - initials != none  
            - initials | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                initials: "{{ initials }}"

        - name: Modify ipPhone user in AD
          when: 
            - json_properties.ipPhone is defined
            - json_properties.ipPhone != none  
            - json_properties.ipPhone | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                ipPhone: "{{ json_properties.ipPhone }}"

        - name: Modify l user in AD
          when: 
            - json_properties.l is defined
            - json_properties.l != none  
            - json_properties.l | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                l: "{{ json_properties.l }}"

        - name: Modify mail user in AD
          when:
            - json_properties.mail is defined
            - json_properties.mail != none  
            - json_properties.mail | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                mail: "{{ json_properties.mail }}"

        - name: Modify middleName user in AD
          when:
            - json_properties.middleName is defined
            - json_properties.middleName != none  
            - json_properties.middleName | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                middleName: "{{ json_properties.middleName }}"

        - name: Modify mobile user in AD
          when: 
            - json_properties.mobile is defined
            - json_properties.mobile != none  
            - json_properties.mobile | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                mobile: "{{ json_properties.mobile }}"

        - name: Modify pager user in AD
          when: 
            - json_properties.pager is defined
            - json_properties.pager != none  
            - json_properties.pager | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                pager: "{{ json_properties.pager }}"

        - name: Modify personalTitle user in AD
          when: 
            - json_properties.personalTitle is defined
            - json_properties.personalTitle != none  
            - json_properties.personalTitle | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                personalTitle: "{{ json_properties.personalTitle }}"

        - name: Modify physicalDeliveryOfficeName user in AD
          when: 
            - json_properties.physicalDeliveryOfficeName is defined
            - json_properties.physicalDeliveryOfficeName != none  
            - json_properties.physicalDeliveryOfficeName | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                physicalDeliveryOfficeName: "{{ json_properties.physicalDeliveryOfficeName }}"

        # - name: Modify postalAddress user in AD
        #   when: postalAddress is defined
        #   microsoft.ad.user:
        #     name:     "{{ result.name }}"
        #     identity: "{{ result.distinguished_name }}"
        #     state:    present
        #     attributes:
        #       set:
        #         postalAddress: "{{ postalAddress }}"

        - name: Modify postalCode user in AD
          when: 
            - json_properties.PostalCode is defined
            - json_properties.PostalCode != none  
            - json_properties.PostalCode | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                postalCode: "{{ json_properties.PostalCode }}"

        - name: Modify postOfficeBox user in AD
          when:
            - json_properties.POBox is defined
            - json_properties.POBox != none  
            - json_properties.POBox | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                postOfficeBox: "{{ json_properties.POBox }}"

        - name: Modify sn user in AD
          when: sn is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                sn: "{{ sn }}"

        - name: Modify st user in AD
          when: 
            - json_properties.st is defined
            - json_properties.st != none  
            - json_properties.st | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                st: "{{ json_properties.st }}"

        - name: Modify street user in AD
          when: 
            - json_properties.street is defined
            - json_properties.street != none  
            - json_properties.street | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                street: "{{ json_properties.street }}"

        - name: Modify streetAddress user in AD
          when: 
            - json_properties.StreetAddress is defined
            - json_properties.StreetAddress != none  
            - json_properties.StreetAddress | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                streetAddress: "{{ json_properties.StreetAddress }}"

        - name: Modify telephoneNumber user in AD
          when:
            - json_properties.telephoneNumber is defined
            - json_properties.telephoneNumber != none  
            - json_properties.telephoneNumber | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                telephoneNumber: "{{ json_properties.telephoneNumber }}"

        - name: Modify title user in AD
          when: 
            - json_properties.Title is defined
            - json_properties.Title != none  
            - json_properties.Title | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                title: "{{ json_properties.Title }}"

        - name: Modify wWWHomePage user in AD
          when: 
            - json_properties.wWWHomePage is defined
            - json_properties.wWWHomePage != none  
            - json_properties.wWWHomePage | length != 0
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            attributes:
              set:
                wWWHomePage: "{{ json_properties.wWWHomePage }}"

  # NOTIFICACIONES
  # Crear mensaje para Notificación

    - name: Crear mensaje notificación exitosa
      when: something_wrong == false
      ansible.builtin.set_fact:
        result_process: "Se duplicó de manera exitosa la cuenta: {{ sAMAccountName_source }}"

    - name: Crear mensaje notificación fallida
      when: something_wrong == true
      ansible.builtin.set_fact:
        result_process: "Ocurrió un error no fue posible duplicar la cuenta: {{ sAMAccountName_source }}"

    - name: Send notification_email
      when: notification_email is defined and something_wrong == false
      ansible.builtin.include_role:
        name: ditra.cisco.send_email
        apply:
          delegate_to: localhost
      vars:
        subject: La duplicación del usuario fue exitosa
        body: |
          Todo bien.

          Se duplicó la cuenta: "{{ sAMAccountName_source }}" por "{{ sAMAccountName }}" 

        to_email: "{{ notification_email }}"
        alert: true
        
    - name: Send notification_email_send_user_credentials
      when: notification_email_send_user_credentials is defined and something_wrong == false
      ansible.builtin.include_role:
        name: ditra.cisco.send_email
        apply:
          delegate_to: localhost
      vars:
        subject: La duplicacion del usuario fue exitosa
        body: |
         
          AccountName: "{{ sAMAccountName }}" 
          password: "{{ generated_password }}"
          identity: "{{ result.distinguished_name }}"
          
  
        to_email: "{{ notification_email }}"
        alert: true
        
    - name: Send notification_email_on_fail
      when: notification_email is defined and something_wrong == true
      ansible.builtin.include_role:
        name: ditra.cisco.send_email
        apply:
          delegate_to: localhost
      vars:
        subject: La duplicación del usuario fue fallida
        body: |
          Algo salió mal, revisa la bitácora

          "{{ (mensaje_error is defined ) | ternary(mensaje_error, "Ocurrió un error al tratar de duplicar las cuentas") }}"

        to_email: "{{ notification_email }}"
        alert: true
        
  # Actualización del Ticket de Otobo
    - name: Post report to ticket on otobo
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ path.Ticket }}/{{ TicketID }}/Update"
        method: POST
        body_format: json
        body:
          SessionID: "{{ session_id }}"
          TicketID: "{{ TicketID }}"
          Article:
            CommunicationChannel: Internal
            IsVisibleForCustomer: 1
            Subject: Reporte ansible
            Body: |
              "{{ result_process }}"
              "{{ (mensaje_error is defined is defined ) | ternary(mensaje_error, "Ocurrió un error al tratar de duplicar las cuentas") }}"
            ContentType: text/plain; charset=utf-8
          DynamicField:
           - Name: AutoStatus
             Value: completed
        validate_certs: "{{ validate_certs }}"
        return_content: true
      register: response
      failed_when: "response.status != 200"
      run_once: true
      when: TicketID is not none and session_id is defined


        
                
