---
- name: Add a user in Active Directory
  hosts: 10.100.1.116
  gather_facts: no 
  collections:
    - ditra.cisco
    - ansible.builtin.password

  vars:
    enabled: true
    sAMAccountName: null
    password: null
    generated_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits', 'punctuation'], length=12) }}"
    dominio: Contoso.mx
    user_cannot_change_password: false

    # NOTIFICACIONES
    # Sms 
    # On Success
    notification_sms_on_success: null
    notification_sms_send_user_credentials: null
    # on ERROR
    notification_sms_on_fail: null

    # Email
    # On Success
    notification_email_on_success: edmundo.sanchez@gmail.com
    notification_email_send_user_credentials: null
    # on ERROR
    notification_email_on_fail: null

  tasks:

    - name: Desplegando las variables que llegaron.
      ansible.builtin.debug:
        msg: 
          sAMAccountName: "{{ sAMAccountName }}" 
          password: "{{ password }}"
          generated_password: "{{ generated_password }}"

  # Revisando si ya existe o no el ususario en el AD

    - name: Queryng "{{ sAMAccountName }}" 
      when: sAMAccountName is defined
      community.windows.win_domain_user:
        name: "{{ sAMAccountName }}"
        state: query
      register: result_query 

    - name: Establecer el valor de result_query como result
      ansible.builtin.set_fact:
        result: "{{ result_query }}"   

  # Agregando al usuario por que no existe

    - name: Add User because is absent
      when: result.state == "absent"
      block:
        - name: add user in ad
          when: result.state == "absent"
          microsoft.ad.user:
            name: "{{ sAMAccountName }}"
            password: "{{ (password) | ternary(password, generated_password) }}"
            state: present
            attributes:
              set:
                userPrincipalName: "{{ sAMAccountName }}@{{ dominio }}"
          register: result_add_user

        - name: Desplegando el resultado del Add.
          ansible.builtin.debug:
            var:  result_add_user

        - name: Queryng Again "{{ sAMAccountName }}" 
          when: sAMAccountName is defined
          community.windows.win_domain_user:
            name: "{{ sAMAccountName }}"
            state: query
          register: result_query 

        - name: Establecer el valor de result_query como result
          ansible.builtin.set_fact:
            result: "{{ result_query }}"   

  # Modificando al usuario por que ya existe o por que ya fue creado

    - name: Modify User because is present
      when: result.state == "present"
      block:
        - name: Entrando al bloque de Modificación
          ansible.builtin.debug:
            msg: 
              result.state: "{{ result.state }}" 
              result_add_user: "{{ result_add_user }}"
              result_add_user_is_defined: "{{ result_add_user is defined }}"
              result_add_user.changed_is_defined: "{{ result_add_user.changed is defined }}"
              result_add_user.failed_is_defined: "{{ result_add_user.failed is defined }}"
              result_add_user.changed: "{{ result_add_user.changed }}"
              
        - name: Modify enabled user in AD
          when: enabled is defined and result.enabled != enabled
          microsoft.ad.user:
            enabled: "{{ enabled }}"
            name: "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present

        - name: Modify user_cannot_change_password user in AD
          when: user_cannot_change_password is defined and result.user_cannot_change_password != user_cannot_change_password
          microsoft.ad.user:
            user_cannot_change_password: "{{ user_cannot_change_password }}"
            name: "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:  present

        - name: Modify password user in AD
          when: password is defined or generated_password is defined
          microsoft.ad.user:
            name:     "{{ result.name }}"
            identity: "{{ result.distinguished_name }}"
            state:    present
            password: "{{ (password) | ternary(password, generated_password) }}"

    # NOTIFICACIONES
    - name: Send notification_email_on_success
      when: notification_email_on_success is defined and result_add_user.changed == true and result_add_user.failed == false
      ansible.builtin.include_role:
        name: ditra.cisco.send_email
        apply:
          delegate_to: localhost
      vars:
        subject: La alta/modificación del usuario fue exitosa
        body: |
          Todo super bien

        to_email: "{{ notification_email_on_success }}"
        alert: true
        
    - name: Send notification_email_on_fail
      when: notification_email_on_fail is defined
      ansible.builtin.include_role:
        name: ditra.cisco.send_email
        apply:
          delegate_to: localhost
      vars:
        subject: La alta/modificación del usuario fue fallida
        body: |
          Todo super mal

        to_email: "{{ notification_email_on_fail }}"
        alert: true
        