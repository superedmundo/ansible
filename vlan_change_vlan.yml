---
- name: Change Vlan Port
  hosts: all
  gather_facts: false
  vars_files:
  - "./oscarc_otobo_password"
  collections:
    - ditra.cisco
 
  vars:
    puerto: null
    vlan: 1

    # NOTIFICACIONES
    # Sms 
    # On Success
    notification_sms: null

    # Email
    # On Success
    notification_email: null

    # Variables internas de control de flujo
    something_wrong: false
    mensaje_error: null
    sh_running_config: null

    # vars for otobo changes
    validate_certs: false
    otobo_user: baltadlakd
    base_url: https://10.100.1.127/otobo/nph-genericinterface.pl/Webservice
    module:
      login: /care
      cmdb: /CMDB/ConfigItem
    path:
      login: "{{ base_url }}{{ module.login }}/login"
      Ticket: "{{ base_url }}{{ module.login }}/Ticket"
    TicketID: null

  tasks: 

  - name: Otobo login, get session id
    delegate_to: localhost
    ansible.builtin.uri:
      url: "{{ path.login }}" 
      method: POST
      body_format: json
      body:
        UserLogin: "{{ otobo_user }}"
        Password: "{{ otobo_password }}"
      validate_certs: "{{ validate_certs }}"
      return_content: true
    register: response

  - name: Get SessionID from login response
    ansible.builtin.set_fact:
      session_id: "{{ r.SessionID }}"
    vars:
      r: "{{ response.content | from_json }}"
    delegate_to: localhost
    
  - name: Set auto process ticket as processing status
    delegate_to: localhost
    ansible.builtin.uri:
      url: "{{ path.Ticket }}/{{ TicketID }}/Update"
      method: POST
      body_format: json
      body:
        SessionID: "{{ session_id }}"
        TicketID: "{{ TicketID }}"
        DynamicField:
          - Name: AutoStatus
            Value: processing

      validate_certs: "{{ validate_certs }}"
      return_content: true
    register: response
    failed_when: "response.status != 200"
    run_once: true
    when: TicketID is not none and session_id is defined

  - name: Desplegando las variables que llegaron.
    ansible.builtin.debug:
      msg: 
        puerto: "{{ puerto }}" 
        vlan: "{{ vlan }}"

        # NOTIFICACIONES
        # Email
        # On Success
        notification_email: "{{ notification_email }}"

  - name: Sh start
    ios_command:
      commands: "sh start | section interface {{ puerto }}" 
    register: start_before

  - name: fact running_config.
    ansible.builtin.set_fact:
      sh_start: "{{ start_before.stdout.0 }}"

  - name: switchport access vlan 
    when: vlan is defined and puerto is defined
    block:
      - name: switchport access vlan {{ puerto }} --> {{ vlan }}
        cisco.ios.ios_config:
          lines:
            - switchport access vlan {{ vlan }}
            - no shutdown
          parents: interface {{ puerto }}  
        register: resultado 
      
    rescue: 

      - name: Envio de correo failed al no poder cambiar el {{ puerto }} a la vlan {{ vlan }}
        when: notification_email is defined
        ansible.builtin.include_role:
          name: ditra.cisco.send_email
          apply:
            delegate_to: localhost
        vars:
          subject: Ocurrió un error al tratar de cambiar el {{ puerto }} a la vlan {{ vlan }}
          body: |
            Ocurrió un error al tratar de cambiar el {{ puerto }} a la vlan {{ vlan }}
            "{{ resultado }}"

          to_email: "{{ notification_email }}"
          alert: true      

      - name: Establecer el valor de algo Erroneo
        ansible.builtin.set_fact:
          something_wrong: true

  - name: Grabar la configuracion
    when: vlan is defined and puerto is defined and something_wrong == false
    block:
      - name: save ios
        when: resultado.changed
        ios_command:
          commands: "write mem"
        register: resultado 
      
    rescue:   

      - name: Establecer el valor de algo Erroneo
        ansible.builtin.set_fact:
          something_wrong: true

      - name: Envio de correo failed al no poder grabar la configuración
        when: notification_email is defined and something_wrong == true
        ansible.builtin.include_role:
          name: ditra.cisco.send_email
          apply:
            delegate_to: localhost
        vars:
          subject: Ocurrió un error al tratar de grabar la configuracion
          body: |
            Ocurrió un error al tratar de grabar la configuracion de cambiar el {{ puerto }} a la vlan {{ vlan }}
            "{{ resultado }}"

          to_email: "{{ notification_email }}"
          alert: true    

  - name: Sh runing
    ios_command:
      commands: "sh running-config | section interface {{ puerto }}" 
    register: running_config  

  - name: Desplegando el resultado del running_config.
    ansible.builtin.debug:
      var:  running_config

  - name: fact running_config.
    ansible.builtin.set_fact:
      sh_running_config: "{{ running_config.stdout.0 }}"

  - name: crear mensaje notificación exitosa
    when: something_wrong == false
    ansible.builtin.set_fact:
      result_process: "todo ok"

  - name: crear mensaje notificación fallida
    when: something_wrong == true
    ansible.builtin.set_fact:
      result_process: "ocurrió un error "

  # NOTIFICACIONES
  - name: Send notification
    when: notification_email is defined and something_wrong == false
    ansible.builtin.include_role:
      name: ditra.cisco.send_email
      apply:
        delegate_to: localhost
    vars:
      subject: La modificación del puerto {{ puerto }} a la vlan {{ vlan }} fue un éxito
      body: |
        Configuración start antes del cambio
        #sh start | section interface {{ puerto }}:
        "{{ sh_start }}" 

        Configuración running después del cambio
        #sh running-config | section interface {{ puerto }}:
        "{{ sh_running_config }}"

      to_email: "{{ notification_email }}"
      alert: true
       
  - name: Send notification_email_on_fail
    when: notification_email is defined and something_wrong == true
    ansible.builtin.include_role:
      name: ditra.cisco.send_email
      apply:
        delegate_to: localhost
    vars:
      subject: La modificación del puerto {{ puerto }} a la vlan {{ vlan }} falló
      body: |
        Algo salió mal, revisa la bitácora

      to_email: "{{ notification_email }}"
      alert: true
        
  # Actualización del Ticket de Otobo
  - name: Post report to ticket on otobo
    delegate_to: localhost
    ansible.builtin.uri:
      url: "{{ path.Ticket }}/{{ TicketID }}/Update"
      method: POST
      body_format: json
      body:
        SessionID: "{{ session_id }}"
        TicketID: "{{ TicketID }}"
        Article:
          CommunicationChannel: Internal
          IsVisibleForCustomer: 1
          Subject: Reporte ansible
          Body: |
            result_process: "{{ result_process }}"

            Configuración start antes del cambio
            #sh start | section interface {{ puerto }}:
            "{{ sh_start }}"

            Configuración final del puerto despúes de correr el proceso:
            #sh running-config | section interface {{ puerto }}:
            "{{ sh_running_config }}"
            
            
            "{{ (mensaje_error is defined ) | ternary(mensaje_error, "Ocurrió un error al tratar de cambiar la vlan") }}"
          ContentType: text/plain; charset=utf-8
        DynamicField:
          - Name: AutoStatus
            Value: completed
      validate_certs: "{{ validate_certs }}"
      return_content: true
    register: response
    failed_when: "response.status != 200"
    run_once: true
    when: TicketID is not none and session_id is defined

  