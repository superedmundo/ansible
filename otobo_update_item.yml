---
- name: Update Item Cmdb
  hosts: all
  become: false
  gather_facts: false
  vars_files:
    - ./oscarc_otobo_password
  collections:
    - community.general
  vars:
  
    # otobo vars
    validate_certs: false
    otobo_user: baltadlakd
    base_url: https://10.100.1.124/otobo/nph-genericinterface.pl/Webservice
    config_item_class: Computer
    config_item_name: ActiveDirectory2012R2
    config_item_note: Reboot
    config_item_schedule: 090000
    email: baltadlakd@gmail.com
    cell: 3321097551
    module:
      login: /care
      cmdb: /CMDB/ConfigItem
    path:
      login: "{{ base_url }}{{ module.login }}/login"
      Ticket: "{{ base_url }}{{ module.login }}/Ticket"
      cmdb:
        retrieve: "{{ base_url }}{{ module.cmdb }}"
        create: "{{ base_url }}{{ module.cmdb }}"
        patch: "{{ base_url }}{{ module.cmdb }}/update"
        delete: "{{ base_url }}{{ module.cmdb }}/delete"
        search: "{{ base_url }}{{ module.cmdb }}/search"
    TicketID: null
    counter: 0

    # Diccionario ComputerName: Schedule
    host_schedule:
      ActiveDirectory2012R2: "000500"
      WindowsServer-Clon-01: "001500"
      WindowsServer-Clon-02: "001500"

  tasks:
    - name: Otobo login, get session id
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ path.login }}"
        method: POST
        body_format: json
        body:
          UserLogin: "{{ otobo_user }}"
          Password: "{{ otobo_password }}"
        validate_certs: "{{ validate_certs }}"
        return_content: true
      register: response

    - name: Get SessionID from login response
      ansible.builtin.set_fact:
        session_id: "{{ r.SessionID }}"
      vars:
        r: "{{ response.content | from_json }}"
      delegate_to: localhost

    - name: Iterar sobre diccionario
      debug:
        msg: "Llave: {{ item.key }}, Valor: {{ item.value }}"
      loop: "{{ host_schedule | dict2items }}"

    - name: Search config item for computer
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ path.cmdb.search }}"
        method: POST
        body_format: json
        body:
          SessionID: "{{ session_id }}"
          ConfigItem:
            Class: "{{ config_item_class }}"
            Name: "{{ item.key }}"
            # CIXMLData: 
            #   Note: "Reboot"
        validate_certs: "{{ validate_certs }}"
        return_content: true
      loop: "{{ host_schedule | dict2items }}"
      register: response

    - name: set_fact items_ids
      delegate_to: localhost
      ansible.builtin.set_fact:
        items_ids: "{{ response | community.general.json_query('results[*].json.ConfigItemIDs[0]')  }}"
    
    - name: Convert ids list to ids string
      delegate_to: localhost
      ansible.builtin.set_fact:
        string_items_ids: "{{ items_ids | join(',') }}"

    - name: Get Computer items
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ path.cmdb.retrieve }}?SessionID={{ session_id }}&ConfigItemID={{ string_items_ids }}"
        method: GET
        validate_certs: "{{ validate_certs }}"
        return_content: true
      register: response

    - name: set_fact ComputerName_ConfigItems
      delegate_to: localhost
      ansible.builtin.set_fact:
        ComputerName: "{{ response.json | community.general.json_query('ConfigItem[*].Name')  }}"
        ConfigItems:    "{{ response.json | community.general.json_query('ConfigItem[*]')  }}"

    - name: set_fact Dic_ComputerName_ConfigItems
      delegate_to: localhost
      ansible.builtin.set_fact:
        Dic_ComputerName_ConfigItems: "{{ Dic_ComputerName_ConfigItems | default({}) | combine({ item[0]: item[1] }) }}"
      loop: "{{ ComputerName | zip(ConfigItems) | list }}"    

    - name: Update item
      delegate_to: localhost
      ansible.builtin.uri:
        url: "{{ path.cmdb.patch }}"
        method: POST
        body_format: json
        body:
          SessionID: "{{ session_id }}"
          ConfigItemID: "{{ item.value.ConfigItemID }}"
          ConfigItem:
            Class: "{{ item.value.Class }}"
            Name: "{{ item.key }}"
            DeplState: "{{ item.value.DeplState }}"
            InciState: "{{ item.value.InciState }}"
            CIXMLData: 
               HoraReboot: "{{ host_schedule[item.key] }}"
               #"{{ item.value.CIXMLData.HoraReboot }}"
               Note: "{{ (item.value.CIXMLData.HoraReboot == '999999') | ternary('', 'Reboot') }}"
        validate_certs: "{{ validate_certs }}"
        return_content: true
      loop: "{{ Dic_ComputerName_ConfigItems | dict2items }}"
      register: response

    - name: Desplegando response update.
      ansible.builtin.debug:
        msg: 
          response: "{{ response.msg }}"  

   